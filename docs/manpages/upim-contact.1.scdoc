upim-contact(1) "0.1.0-prerelease" "upim-contact manual"

# NAME

upim-contact - the uPIM contact manager

# SYNOPSIS

*upim-contact* [-C _COLLECTION_] [--conf _PATH_] *new* _NAME_

*upim-contact* [-C _COLLECTION_] [--conf _PATH_] *edit* _NAME_ | _PATH_

*upim-contact* [_FILTER-ALIAS_] [_ALIAS-ARGUMENTS_] [_OPTION_...]

# DESCRIPTION

uPIM is a collection of libraries and applications to form the building blocks
for a personal information management system.

upim-contact uses a flexible, human-readable format for storing contact data to
help you quickly find the person(s) you're looking for right now.

See *upim-contact*(5) for details on the contact note format.

# OPTIONS

## General Options

*-C* _COLLECTION-NAME_
	Use the specified collection rather than the default

*--conf* _PATH_
	Use the specified configuration file instead of the default. The global uPIM
	configuration file is still read

## Query Options

*--filter* _FILTER-STRING_
	Filter the contacts according to the given filter string. If multiple
	*--filter* options are given, the intersection (logical AND) is applied

*--limit* _LIMIT_
	The maximum number of contact records to output. Invalid input and numbers
	below 1 are ignored

*--sort-a* _FIELD-NAME_
	Sort contacts by the given field in ascending order

*--sort-d* _FIELD-NAME_
	Sort contacts by the given field in descending order

## Commands

*new* _NAME_
	Create and edit a new contact with the given name in the default collection

*edit* _NAME_ | _FILE_
	Edit the given file or first discovered contact with the specified name

Note that _upim-edit_ must be in the system or user path to use the *new* and
*edit* commands.

# FILTER SYNTAX

Filters are SQL SELECT-like queries to filter the list of all contacts that can
be read. Filters are of the form "field-list WHERE restrictions". The WHERE
subclause is optional; if not present, all contacts are printed.

Fields within categories can be displayed by separating the category name and
field name with a colon. For example, given the contact:

```
[Name: Favorite Person]

@Employer
[Name: Some Company]
```

You can select the contact's name with "Name" and the employer's name with
"Employer:Name".

The WHERE clause is comprised of one or more comparisons or function calls.
Filters can be joined via "AND" or "OR":

```
upim-contact \
    --filter "Name WHERE Name NOT 'Nobody' AND Employer:Name = 'Some Company'"
```

## Comparison Operators

[[ *Operator Type*
:[ *Symbol*
:[ *Example*
|  Equal to
:  =
:  Name = 'Some Person'
|  Less than
:  <
:  Employer:Income < 100000
|  Less than or equal to
:  <=
:  Employer:Income <= 100000
|  Greater than
:  >
:  "Parking Tickets" > 4
|  Greater than or equal to
:  >=
:  "Parking Tickets" >= 4
|  Not equal to
:  NOT
:  Spouse:Name NOT ""

With the = and NOT operators, upim-contact performs string comparisons. For all
other operators, the value is converted to a floating-point number prior to
performing the comparison. If the value is unable to be parsed as a numeric
value, upim-contact will display an error message.

## Query Functions

Query functions are not yet implemented. This section documents the planned
functions and their behavior.

[[ *Function*
:[ *Description*
|  REF(field-name)
:  Reference the specified field as a subcontact. Other portions of the query
   may refer to that subcontact. For example: with "s = REF(Spouse)" a contact
   with the name listed in the Spouse field is linked with the name "s" and its
   fields can be used like any other field: "s.Phone".
|  SPLIT(field-name,separator)
:  Split the given field via _separator_ into multiple fields. The rest of the
   query will operate on each created field individually (this effectively works
   like "for each subfield in fields").
|  REGEX(field-name, regex)
:  Filter the result set to only include contacts in which the values of the
   given field match the regular expression.

See the _EXAMPLES_ section for examples using each function.

# SEARCH ALIASES

Search aliases are commands defined in *upim-contact.conf* to provide
pre-defined filters. See *upim-conf*(5) for information on creating search
aliases.

Search aliases may have arguments; for example, the default *find* alias takes
a string to match against contacts' Name fields:

```
$ upim-contact find 'Favorite Person'
```

The above command with the default "find" alias definition is equivalent to:

```
$ upim-contact --filter 'Name,Phone,Employer:Name' WHERE \
Name = 'Favorite Person'
```

Filters may be provided to further limit results:

```
$ upim-contact find 'Favorite Person' --filter '* WHERE Phone NOT EMPTY'
```

# CONFIGURATION


# FILES


# EXAMPLES


# SEE ALSO

*upim*(7), *upim-contact*(5), *upim-conf*(5)
