upim-conf(5) "0.1.0-prerelease" "upim configuration manual"

# NAME

upim-conf - configuration file locations and settings for uPIM applications

# DESCRIPTION

uPIM is a collection of libraries and applications to form the building blocks
for a personal information management system.

# INI File Format

All uPIM configuration files use a simple INI file format:

- groups are created by naming them within brackets.
- an equal sign ('=') is used for variable assignment.
- variables can contain a '=' character.
- leading and trailing whitespace is ignored.
- whitespace surrounding group names, variables, and values are removed.
- whitespace within group names, variable names, and values is allowed.
- a semicolon (';') at the beginning of a line denotes a comment.
- if a variable is set multiple times in a file, the last one read is kept.

# CONFIGURATION FILE LOCATIONS

## File Locations for macOS

. /Library/Application Support/us.simplifysystems.uPIM/upim.conf
. /etc/upim/upim.conf
. /$HOME/Library/Application Support/us.simplifysystems.uPIM/upim.conf
. $HOME/.config/upim/upim.conf
. (current working directory)/.upim.conf

It is recommended to use only the Library or only the non-Library directories,
but not to mix configuration file locations between them.

Values set in later files override the earlier values, so the priority is in the
reverse order of the list above.

Applications built upon uPIM may place their own configuration files within a
upim configuration directory.

## File Locations for Other UNIXy OSes

Configurations are read from the following paths, in the following order:

. /etc/upim/upim.conf
. $XDG_CONFIG_HOME/upim/upim.conf (or $HOME/.config/upim/upim.conf if
  $XDG_CONFIG_HOME is not defined)
. (current working directory)/.upim.conf

Values set in later files override the earlier values, so the priority is in the
reverse order of the list above.

Applications built upon uPIM may place their own configuration files within a
upim configuration directory.

# GLOBAL UPIM CONFIGURATION VARIABLES

Some applications may override variables set from their own configuration files.

## Default Group

*template_folder* (optional)
	An absolute path to the directory that contains Note templates.

*collection_base* (optional)
	The (absolute) base path for relative paths in the Collections group. If not
	specified, all collection paths must be absolute.

## Collections Group

The collections group has not predefined variables. Collections are defined by
defining a variable of the collection's name with a value of the absolute path
to the directory containing notes within that collection.

# UPIM-CONTACT CONFIGURATION

upim-contact searches for the following files and uses the first one it finds:

. /etc/upim/upim-contact.conf
. $XDG_CONFIG_HOME/upim/upim-contact.conf (or
  $HOME/.config/upim/upim-contact.conf if $XDG_CONFIG_HOME is unset)

You can specify an alternative file via the *-C* option.

## Default Group

*default_collection* (required)
	The collection to use when **-C** is not provided

*field_separator*
	The string or character to separate each field of a contact record when
	printing to standard output

Valid field separators are:

- Any quoted string
- Any UTF-8-encoded character
- "{SPACE}" or "{TAB}"
- A Unicode character code in the form "\\u*XXXX*"

The default field separator is " | ".

## Aliases Group

The aliases group allows you to create pre-defined searches and run them as
commands. Alias names cannot match a command name.

An alias is a list of command-line arguments to be appended to
*upim-contact*'s argument list. Aliases may use other aliases, but infinite
recursion is possible -- *upim-contact* makes no attempt to analyze recursive
aliases.

Unlike on the command-line, do not place quotes around the filter string:

    At the command-line: upim-contact --filter "Name WHERE Phone NOT EMPTY"
    Alias: --filter Name WHERE Phone NOT EMPTY

Aliases may accept arguments in the form of parameter substitutions by using the
dollar sign and zero-based index of the argument. If you need a literal dollar
sign followed by an integer, use a backslash to escape it.

There are two aliases defined in the default configuration file:

```
view = --filter 'Name,Phone,Employer:Name' WHERE Name = '$0' --limit 1
find = --filter 'Name,Phone,Employer:Name' WHERE Name = '$0'
```

The *view* alias will display the name, phone number, and employer's name of the
first contact that matches the filter. The *find* alias displays the same
information for all contacts that match the filter. You may add filters when
using an alias to further restrict the search.

Example commands using each alias:

```
upim-contact view 'Some Person'
upim-contact find 'Some Person' --filter '* WHERE Phone NOT EMPTY'
```

# UPIM-EDIT CONFIGURATION

upim-edit searches for the following files and uses the first one it finds:

. /etc/upim/upim-edit.conf
. $XDG_CONFIG_HOME/upim/upim-edit.conf (or $HOME/.config/upim/upim-edit.conf if
  $XDG_CONFIG_HOME is unset)

You can specify an alternative file via the *-C* option.

## Default Group

*editor*
	Specify the text editor to use. Required only if $EDITOR is not set or if
	the $EDITOR requires an **editor_arg** that upim-edit does not recognize.

*editor_arg*
	A command-line argument to tell the editor to run in the background, if
	required.

*template_folder* (optional)
	The global **template_folder** may be overridden.

*collection_base* (optional)
	The global **collection_base** may be overridden.

## Collections Group

The upim-edit configuration may append to or override the global collections.
This is likely of use only to people using multiple configurations for different
purposes (project-specific configurations, etc.).

# FILES

/etc/upim/upim.conf

$XDG_CONFIG_HOME/upim/upim.conf

$HOME/.config/upim/upim.conf

# EXAMPLES

```
[DEFAULT]

template_folder = /home/me/upim-templates

[Collections]
Contacts = /home/me/Contacts
Documents = /home/me/Documents
Recipes = /home/me/Documents/Recipes
KB = /home/me/notes
```

# SEE ALSO

*upim*(7)

